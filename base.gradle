buildscript {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "io.spring.gradle:propdeps-plugin:0.0.9.RELEASE"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

allprojects {
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "http://103.216.103.3:8081/repository/maven-public/" }
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
    }
    ext.releaseBuild = version.endsWith("RELEASE")
    ext.snapshotBuild = version.endsWith("SNAPSHOT")

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, "seconds"
        resolutionStrategy.cacheDynamicVersionsFor 0, "seconds"
    }

}

subprojects {

    apply plugin: "idea"
    apply plugin: "eclipse"
    apply plugin: "maven"
    apply plugin: io.spring.gradle.propdeps.PropDepsPlugin
    apply plugin: io.spring.gradle.propdeps.PropDepsMavenPlugin
    apply plugin: io.spring.gradle.propdeps.PropDepsIdeaPlugin
    apply plugin: io.spring.gradle.propdeps.PropDepsEclipsePlugin
    apply plugin: io.spring.gradle.dependencymanagement.DependencyManagementPlugin
    apply plugin: org.sonarqube.gradle.SonarQubePlugin

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    test {
        jvmArgs = ["-Dspring.profiles.active=test"]
    }
    
    sonarqube {
        properties {
            property "sonar.host.url", "http://sonar.easyrentcars.com"
            property "sonar.login", "aede0496afc19c69281a34347b17502f1c56e669"
            property "sonar.scm.provider", "git"
        }
    }
    
}